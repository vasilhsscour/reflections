What happens when you initialize a repository? Why do you need to do it?
    When you initialize a repository create a folder .git which contain the repository where you store your files. You need to do this to save you files in repo.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
    The staging area is an intermediate storage where you can store the files you want to commit.
    It offers the power to make good commits and to think if you want for sure to commit them or add and other files to that commit.

How can you use the staging area to make sure you have one commit per logical
change?
    You can add files to staging area and see if that files make this commit logical.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
    If you want to kake a different viersion of your project or you want to make same risky changes to your project, the branches can keep you original code untouch.

How do the diagrams help you visualize the branch structure?
    To see how to merge them and what changes have made of each branch.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
    Because merging two branches creates a new commit that has access to both branches.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
